{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "webapi",
    "description" : "Welcome to the GGN developer documentation.\n\nV1.0.0 Changes:\n\nFirst version : single endpoint to test the api",
    "termsOfService" : "https://tallyfy.com/legal/api-terms-service/",
    "contact" : {
      "name" : "Arjen Houweling",
      "email" : "a.houweling@ggn.nl"
    },
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "http://talend/api.php"
  } ],
  "paths" : {
    "/records/dossiers" : {
      "get" : {
        "tags" : [ "dossiers" ],
        "description" : "list dossiers",
        "operationId" : "list_dossiers",
        "parameters" : [ {
          "$ref" : "#/components/parameters/exclude"
        }, {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/join"
        }, {
          "$ref" : "#/components/parameters/order"
        }, {
          "$ref" : "#/components/parameters/filter"
        }, {
          "$ref" : "#/components/parameters/include"
        }, {
          "$ref" : "#/components/parameters/size"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/list-dossiers"
          }
        }
      },
      "post" : {
        "tags" : [ "dossiers" ],
        "description" : "create dossiers",
        "operationId" : "create_dossiers",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/create-dossiers"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/pk_string"
          }
        }
      }
    },
    "/records/dossiers/{id}" : {
      "get" : {
        "tags" : [ "dossiers" ],
        "description" : "read dossiers",
        "operationId" : "read_dossiers",
        "parameters" : [ {
          "$ref" : "#/components/parameters/exclude"
        }, {
          "$ref" : "#/components/parameters/join"
        }, {
          "$ref" : "#/components/parameters/include"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/read-dossiers"
          }
        }
      },
      "put" : {
        "tags" : [ "dossiers" ],
        "description" : "update dossiers",
        "operationId" : "update_dossiers",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/update-dossiers"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/rows_affected"
          }
        }
      },
      "delete" : {
        "tags" : [ "dossiers" ],
        "description" : "delete dossiers",
        "operationId" : "delete_dossiers",
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/rows_affected"
          }
        }
      },
      "patch" : {
        "tags" : [ "dossiers" ],
        "description" : "increment dossiers",
        "operationId" : "increment_dossiers",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/increment-dossiers"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/rows_affected"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/status/ping" : {
      "get" : {
        "tags" : [ "status" ],
        "description" : "Request API 'ping' status",
        "operationId" : "ping_status",
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/ping-status"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "list-dossiers" : {
        "type" : "object",
        "properties" : {
          "results" : {
            "type" : "integer",
            "format" : "int64"
          },
          "records" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "integer",
                  "format" : "int64"
                },
                "dossiernummer" : {
                  "type" : "string",
                  "maxLength" : 11,
                  "pattern" : "^.{0,11}$"
                },
                "opdnummer" : {
                  "type" : "string",
                  "maxLength" : 8,
                  "pattern" : "^.{0,8}$"
                },
                "status" : {
                  "type" : "string",
                  "maxLength" : 6,
                  "pattern" : "^.{0,6}$"
                },
                "lopend" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            }
          }
        }
      },
      "create-dossiers" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "dossiernummer" : {
            "type" : "string",
            "maxLength" : 11,
            "pattern" : "^.{0,11}$"
          },
          "opdnummer" : {
            "type" : "string",
            "maxLength" : 8,
            "pattern" : "^.{0,8}$"
          },
          "status" : {
            "type" : "string",
            "maxLength" : 6,
            "pattern" : "^.{0,6}$"
          },
          "lopend" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "read-dossiers" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "dossiernummer" : {
            "type" : "string",
            "maxLength" : 11,
            "pattern" : "^.{0,11}$"
          },
          "opdnummer" : {
            "type" : "string",
            "maxLength" : 8,
            "pattern" : "^.{0,8}$"
          },
          "status" : {
            "type" : "string",
            "maxLength" : 6,
            "pattern" : "^.{0,6}$"
          },
          "lopend" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "update-dossiers" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "dossiernummer" : {
            "type" : "string",
            "maxLength" : 11,
            "pattern" : "^.{0,11}$"
          },
          "opdnummer" : {
            "type" : "string",
            "maxLength" : 8,
            "pattern" : "^.{0,8}$"
          },
          "status" : {
            "type" : "string",
            "maxLength" : 6,
            "pattern" : "^.{0,6}$"
          },
          "lopend" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "increment-dossiers" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "dossiernummer" : {
            "type" : "string",
            "maxLength" : 11,
            "pattern" : "^.{0,11}$"
          },
          "opdnummer" : {
            "type" : "string",
            "maxLength" : 8,
            "pattern" : "^.{0,8}$"
          },
          "status" : {
            "type" : "string",
            "maxLength" : 6,
            "pattern" : "^.{0,6}$"
          },
          "lopend" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "ping-status" : {
        "type" : "object",
        "required" : [ "cache", "db" ],
        "properties" : {
          "db" : {
            "type" : "integer",
            "format" : "int64"
          },
          "cache" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      }
    },
    "responses" : {
      "pk_integer" : {
        "description" : "inserted primary key value (integer)",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      },
      "pk_string" : {
        "description" : "inserted primary key value (string)",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "string"
            }
          }
        }
      },
      "rows_affected" : {
        "description" : "number of rows affected (integer)",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      },
      "list-dossiers" : {
        "description" : "list of dossiers records",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/list-dossiers"
            }
          }
        }
      },
      "read-dossiers" : {
        "description" : "single dossiers record",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/read-dossiers"
            }
          }
        }
      },
      "ping-status" : {
        "description" : "ping status record",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ping-status"
            }
          }
        }
      }
    },
    "parameters" : {
      "filter" : {
        "name" : "filter",
        "in" : "query",
        "description" : "Filters to be applied. Each filter consists of a column, an operator and a value (comma separated). Example: id,eq,1",
        "schema" : {
          "type" : "array",
          "description" : "Filters to be applied. Each filter consists of a column, an operator and a value (comma separated). Example: id,eq,1",
          "items" : {
            "type" : "string"
          }
        }
      },
      "include" : {
        "name" : "include",
        "in" : "query",
        "description" : "Columns you want to include in the output (comma separated). Example: posts.*,categories.name",
        "schema" : {
          "type" : "string",
          "description" : "Columns you want to include in the output (comma separated). Example: posts.*,categories.name"
        }
      },
      "exclude" : {
        "name" : "exclude",
        "in" : "query",
        "description" : "Columns you want to exclude from the output (comma separated). Example: posts.content",
        "schema" : {
          "type" : "string",
          "description" : "Columns you want to exclude from the output (comma separated). Example: posts.content"
        }
      },
      "order" : {
        "name" : "order",
        "in" : "query",
        "description" : "Column you want to sort on and the sort direction (comma separated). Example: id,desc",
        "schema" : {
          "type" : "array",
          "description" : "Column you want to sort on and the sort direction (comma separated). Example: id,desc",
          "items" : {
            "type" : "string"
          }
        }
      },
      "size" : {
        "name" : "size",
        "in" : "query",
        "description" : "Maximum number of results (for top lists). Example: 10",
        "schema" : {
          "type" : "string",
          "description" : "Maximum number of results (for top lists). Example: 10"
        }
      },
      "page" : {
        "name" : "page",
        "in" : "query",
        "description" : "Page number and page size (comma separated). Example: 1,10",
        "schema" : {
          "type" : "string",
          "description" : "Page number and page size (comma separated). Example: 1,10"
        }
      },
      "join" : {
        "name" : "join",
        "in" : "query",
        "description" : "Paths (comma separated) to related entities that you want to include. Example: comments,users",
        "schema" : {
          "type" : "array",
          "description" : "Paths (comma separated) to related entities that you want to include. Example: comments,users",
          "items" : {
            "type" : "string"
          }
        }
      },
      "pk" : {
        "name" : "pk",
        "in" : "path",
        "required" : true,
        "description" : "primary key value",
        "schema" : {
          "type" : "string",
          "description" : "primary key value"
        }
      }
    }
  }
}